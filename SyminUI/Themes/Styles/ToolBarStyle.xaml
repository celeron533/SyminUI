<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    
    <Style TargetType="{x:Type Button}" 
               x:Key="{x:Static ToolBar.ButtonStyleKey}"
               BasedOn="{StaticResource ButtonFlatten}">
        <Setter Property="Padding" Value="4,2"/>
        <Setter Property="Margin" Value="1,2"/>
        <Setter Property="Background" Value="{StaticResource Background.Toolbar}"/>
    </Style>

    <!--除展开按钮外的面板-->
    <Style x:Key="ToolBarMainPanelBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="Margin" Value="0,0,10,0"/>
        <Setter Property="CornerRadius" Value="4"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
                <Setter Property="CornerRadius" Value="0"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <!--前端拖拽指示-->
    <Style x:Key="ToolBarThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="Transparent" 
                                Padding="{TemplateBinding Padding}" 
                                SnapsToDevicePixels="True">
                        <Border Background="{StaticResource Border.MainBrush}" 
                                    CornerRadius="1"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Cursor" Value="SizeAll"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--水平展开按钮-->
    <Style x:Key="ToolBarHorizontalOverflowButtonStyle" 
               TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{StaticResource Background.Toolbar}"/>
        <Setter Property="Foreground" Value="{StaticResource Text.Main}"/>
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="Bd" CornerRadius="0,4,4,0" Width="10"
                                Background="{TemplateBinding Background}" 
                                SnapsToDevicePixels="true">

                        <Grid VerticalAlignment="Bottom" Margin="1,2,3,1">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="4"/>
                                <RowDefinition Height="4"/>
                            </Grid.RowDefinitions>
                            <Rectangle Fill="{TemplateBinding Foreground}"
                                           Height="1"/>
                            <Path Data="M0,0 L3,3 L6,0z" Grid.Row="1"
                                      Fill="{TemplateBinding Foreground}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="Bd" 
                                        Value="{StaticResource Background.SelectedMask}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="Background" TargetName="Bd" 
                                        Value="{StaticResource Background.FocusedMask}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground"
                                        Value="{StaticResource Text.Main.Disabled}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
                <Setter Property="Background" 
                            Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <!--垂直展开按钮-->
    <Style x:Key="ToolBarVerticalOverflowButtonStyle" 
               TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{StaticResource Background.Toolbar}"/>
        <Setter Property="Foreground" Value="{StaticResource Text.Main}"/>
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="Bd"
                                Background="{TemplateBinding Background}"
                                CornerRadius="0,0,4,4" 
                                SnapsToDevicePixels="true">
                        <Grid HorizontalAlignment="Right" Margin="4" Width="4">
                            <Path Data="M6,0 L6,6 L0,6z" Grid.Column="1"
                                      Fill="{TemplateBinding Foreground}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="Bd" 
                                        Value="{StaticResource Background.SelectedMask}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="Background" TargetName="Bd" 
                                        Value="{StaticResource Background.FocusedMask}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" 
                                        Value="{StaticResource Text.Main.Disabled}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
                <Setter Property="Background" 
                            Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type ToolBar}">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Background" Value="{StaticResource Background.Toolbar}"/>
        <Setter Property="Foreground" Value="{StaticResource Text.Secondary}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToolBar}">
                    <Grid x:Name="Grid" Margin="4,2,2,2" SnapsToDevicePixels="true">
                        <Grid x:Name="OverflowGrid" HorizontalAlignment="Right">
                            <!--展开按钮-->
                            <ToggleButton x:Name="OverflowButton" 
                                              ClickMode="Press" 
                                              FocusVisualStyle="{x:Null}" 
                                              IsChecked="{Binding IsOverflowOpen, Mode=TwoWay, 
                                                    RelativeSource={RelativeSource TemplatedParent}}" 
                                              IsEnabled="{TemplateBinding HasOverflowItems}" 
                                              Style="{StaticResource ToolBarHorizontalOverflowButtonStyle}"/>
                            <Popup x:Name="OverflowPopup" 
                                       AllowsTransparency="true" Focusable="false" 
                                       IsOpen="{Binding IsOverflowOpen, 
                                            RelativeSource={RelativeSource TemplatedParent}}" 
                                       Placement="Bottom" PopupAnimation="None" StaysOpen="false">
                                <Border x:Name="ToolBarSubMenuBorder" 
                                            Margin="8" CornerRadius="4"
                                            Background="{StaticResource Background.Toolbar}" 
                                            BorderBrush="{StaticResource Border.MainBrush}" 
                                            Effect="{StaticResource PopupShadow}"
                                            BorderThickness="0" RenderOptions.ClearTypeHint="Enabled">
                                    <ToolBarOverflowPanel x:Name="PART_ToolBarOverflowPanel" 
                                                              KeyboardNavigation.DirectionalNavigation="Cycle" 
                                                              FocusVisualStyle="{x:Null}" 
                                                              Focusable="true" Margin="4,0" 
                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                                              KeyboardNavigation.TabNavigation="Cycle" WrapWidth="200"/>
                                </Border>
                            </Popup>
                        </Grid>
                        <!--工具区域展开按钮除外-->
                        <Border x:Name="MainPanelBorder" CornerRadius="4,0,0,4"
                                    Background="{TemplateBinding Background}" 
                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                    Padding="{TemplateBinding Padding}" 
                                    Style="{StaticResource ToolBarMainPanelBorderStyle}">
                            <DockPanel KeyboardNavigation.TabIndex="1" 
                                           KeyboardNavigation.TabNavigation="Local">
                                <Thumb x:Name="ToolBarThumb" 
                                           Margin="0" Padding="3" Width="8"
                                           Style="{StaticResource ToolBarThumbStyle}" />
                                <ContentPresenter x:Name="ToolBarHeader" 
                                                      ContentSource="Header" 
                                                      HorizontalAlignment="Center" 
                                                      VerticalAlignment="Center"
                                                      Margin="4,0" 
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                <!--菜单项目容器-->
                                <ToolBarPanel x:Name="PART_ToolBarPanel"
                                                  IsItemsHost="true" Margin="0" 
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </DockPanel>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsOverflowOpen" Value="true">
                            <Setter Property="IsEnabled" TargetName="ToolBarThumb" Value="false"/>
                        </Trigger>
                        <Trigger Property="Header" Value="{x:Null}">
                            <Setter Property="Visibility" TargetName="ToolBarHeader" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="ToolBarTray.IsLocked" Value="true">
                            <Setter Property="Visibility" TargetName="ToolBarThumb" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter Property="CornerRadius" TargetName="MainPanelBorder" Value="4,4,0,0"/>
                            <Setter Property="Margin" TargetName="Grid" Value="2,4,2,2"/>
                            <Setter Property="Height" TargetName="ToolBarThumb" Value="8"/>
                            <Setter Property="Width" TargetName="ToolBarThumb" Value="Auto"/>
                            <Setter Property="Padding" TargetName="ToolBarThumb" Value="3"/>
                            <Setter Property="Style" TargetName="OverflowButton" 
                                        Value="{StaticResource ToolBarVerticalOverflowButtonStyle}"/>
                            <Setter Property="Margin" TargetName="MainPanelBorder" Value="0,0,0,10"/>
                            <Setter Property="Margin" TargetName="ToolBarHeader" Value="0,4"/>
                            <Setter Property="DockPanel.Dock" TargetName="ToolBarThumb" Value="Top"/>
                            <Setter Property="DockPanel.Dock" TargetName="ToolBarHeader" Value="Top"/>
                            <Setter Property="HorizontalAlignment" TargetName="OverflowGrid" Value="Stretch"/>
                            <Setter Property="VerticalAlignment" TargetName="OverflowGrid" Value="Bottom"/>
                            <Setter Property="Placement" TargetName="OverflowPopup" Value="Right"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource Text.Main.Disabled}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type ToolBarTray}">
        <Setter Property="Background" Value="Transparent"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
                <Setter Property="Background" 
                            Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>