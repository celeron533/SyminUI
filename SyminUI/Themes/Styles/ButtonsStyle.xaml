<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!--普通按钮-->
    <Style x:Key="ButtonNormal" TargetType="{x:Type Button}">
        <Style.Resources>
            <CornerRadius x:Key="RoundedCorner" TopLeft="6" TopRight="6" BottomRight="6" BottomLeft="6"/>
        </Style.Resources>
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource Function.LightBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Function.LightBorder}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="{StaticResource Text.Main}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="20,5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" 
                            CornerRadius="{StaticResource ResourceKey=RoundedCorner}"
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          TextElement.Foreground="{TemplateBinding Foreground}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" 
                                    Value="{StaticResource PrimaryColor}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" 
                                    Value="#F3F3F3"/>
                            <Setter Property="BorderBrush" TargetName="border"
                                    Value="{StaticResource PrimaryHighlight}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" 
                                    Value="#FFEAEAEA"/>
                            <Setter Property="BorderBrush" TargetName="border" 
                                    Value="#FFD0D0D0"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" 
                                    Value="{StaticResource Function.Grey}"/>
                            <Setter Property="BorderBrush" TargetName="border" 
                                    Value="{StaticResource Additional.Grey}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" 
                                    Value="{StaticResource Additional.Grey}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--主要颜色按钮-->
    <Style x:Key="ButtonPrimary" TargetType="{x:Type Button}">
        <Style.Resources>
            <CornerRadius x:Key="ButtonCorner" TopLeft="6" TopRight="6" BottomRight="6" BottomLeft="6"/>
        </Style.Resources>
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource PrimaryColor}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="{StaticResource Text.White}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="20,5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="border" 
                            CornerRadius="{DynamicResource ResourceKey=ButtonCorner}"
                            Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <!--点击的时候覆盖一层高亮-->
                        <Border x:Name="highlightBorder"
                                CornerRadius="{DynamicResource ResourceKey=ButtonCorner}"
                                SnapsToDevicePixels="true"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="highlightBorder" 
                                    Value="transparent"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="highlightBorder" 
                                    Value="#10C3FFF9"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="highlightBorder" 
                                    Value="#25B9FFE3"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" 
                                    Value="{StaticResource Additional.Grey}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" 
                                    Value="{StaticResource Function.Grey}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--默认按钮样式-->
    <Style BasedOn="{StaticResource ResourceKey=ButtonNormal}" TargetType="{x:Type Button}"/>
    <!--左侧圆角的按钮-->
    <Style x:Key="LeftCornerButton" BasedOn="{StaticResource ResourceKey=ButtonPrimary}"  TargetType="{x:Type Button}">
        <Style.Resources>
            <CornerRadius x:Key="ButtonCorner" TopLeft="6" TopRight="0" BottomRight="0" BottomLeft="6"/>
        </Style.Resources>
    </Style>
    
    <!--左侧圆角的按钮-->
    <Style x:Key="RightCornerButton" BasedOn="{StaticResource ResourceKey=ButtonPrimary}"  TargetType="{x:Type Button}">
        <Style.Resources>
            <CornerRadius x:Key="ButtonCorner" TopLeft="0" TopRight="6" BottomRight="6" BottomLeft="0"/>
        </Style.Resources>
    </Style>
    <!--无圆角的按钮-->
    <Style x:Key="SharpButton" BasedOn="{StaticResource ResourceKey=ButtonPrimary}"  TargetType="{x:Type Button}">
        <Style.Resources>
            <CornerRadius x:Key="ButtonCorner" TopLeft="0" TopRight="0" BottomRight="0" BottomLeft="0"/>
        </Style.Resources>
    </Style>
</ResourceDictionary>